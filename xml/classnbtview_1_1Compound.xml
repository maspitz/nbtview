<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classnbtview_1_1Compound" kind="class" language="C++" prot="public">
    <compoundname>nbtview::Compound</compoundname>
    <includes refid="Tag_8hpp" local="no">Tag.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnbtview_1_1Compound_1a21f82b837d461f56e7621482eca1e0ef" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="namespacenbtview_1a9fcb48c3df7749255fcc9f3f9e84f3fa" kindref="member">Tag</ref> &gt;::iterator</type>
        <definition>using nbtview::Compound::iterator =  std::map&lt;std::string, Tag&gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="147" column="5" bodyfile="nbtview/Tag.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnbtview_1_1Compound_1ae75c4271ea6ccfddcb21e7462a2ed6fc" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="namespacenbtview_1a9fcb48c3df7749255fcc9f3f9e84f3fa" kindref="member">Tag</ref> &gt;::const_iterator</type>
        <definition>using nbtview::Compound::const_iterator =  std::map&lt;std::string, Tag&gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="148" column="5" bodyfile="nbtview/Tag.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnbtview_1_1Compound_1afc4f90d4bfa6caf384dadd472086473e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; std::map&lt; std::string, <ref refid="namespacenbtview_1a9fcb48c3df7749255fcc9f3f9e84f3fa" kindref="member">Tag</ref> &gt; &gt;</type>
        <definition>std::unique_ptr&lt;std::map&lt;std::string, Tag&gt; &gt; nbtview::Compound::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="170" column="21" bodyfile="nbtview/Tag.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnbtview_1_1Compound_1a30548f7e54178a2d7e05e3f39e5207ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nbtview::Compound::Compound</definition>
        <argsstring>()</argsstring>
        <name>Compound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="113" column="5" bodyfile="nbtview/Tag.hpp" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1a38e6ffc13f37a84b05bad6ca9112fa7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool nbtview::Compound::contains</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>contains</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Tests whether the <ref refid="classnbtview_1_1Compound" kindref="compound">Compound</ref> contains a particular Tag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the Tag&apos;s data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Tag </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True only if the <ref refid="classnbtview_1_1Compound" kindref="compound">Compound</ref> contains a tag with both the correct name and type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="123" column="22" bodyfile="nbtview/Tag.hpp" bodystart="236" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1aa3e34fe1fd2f862e82e135c8c3a8a1fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T &amp; nbtview::Compound::get</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Provides access to the data of a particular Tag in the Compound. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the data to be accessed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the Tag to be accessed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Read/write reference to a Tag&apos;s data. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::out_of_range</parametername>
</parameternamelist>
<parameterdescription>
<para>If <emphasis>name</emphasis> is not present. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::bad_variant_access</parametername>
</parameternamelist>
<parameterdescription>
<para>If <emphasis>T</emphasis> is the wrong type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="135" column="19" bodyfile="nbtview/Tag.hpp" bodystart="232" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1a2065f9f197bb9776da9bd40ce7e9669a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nbtview::Compound::put</definition>
        <argsstring>(const std::string &amp;name, T &amp;&amp;value)</argsstring>
        <name>put</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>T &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Assigns a value to a particular Tag in the Compound, inserting a new Tag if no Tag by that name already exists. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the data to be assigned </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the tag to be assigned </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the data to be assigned </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="145" column="22" bodyfile="nbtview/Tag.hpp" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1a617e8f4f44d84995f4d25c9fb9633a62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto nbtview::Compound::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="150" column="10" bodyfile="nbtview/Tag.hpp" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1af048b79c92349cebff7c946fb89d6704" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto nbtview::Compound::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="151" column="10" bodyfile="nbtview/Tag.hpp" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1af40e2248e39eb5e2e2f11f7cae5e2455" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto nbtview::Compound::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="152" column="10" bodyfile="nbtview/Tag.hpp" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1a5787d3aa5d92db50b4cd894d4a297eaa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto nbtview::Compound::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="153" column="10" bodyfile="nbtview/Tag.hpp" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1a111037d1db2d6118bf1a14140cbd2b94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto nbtview::Compound::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="154" column="10" bodyfile="nbtview/Tag.hpp" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1a5b27dbf191331408891c57e579c04867" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto nbtview::Compound::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="155" column="10" bodyfile="nbtview/Tag.hpp" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1aeaf04cfe043461d7f8ac9e8ced9ae973" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nbtview::Compound::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="157" column="12" bodyfile="nbtview/Tag.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1a883a02c7626f2bf6755a75b0b793ed2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nbtview::Compound::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="158" column="10" bodyfile="nbtview/Tag.hpp" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1a512af697c0ff1ffa42f4304e34065620" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenbtview_1a9fcb48c3df7749255fcc9f3f9e84f3fa" kindref="member">Tag</ref> &amp;</type>
        <definition>Tag&amp; nbtview::Compound::at</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>at</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="160" column="9" bodyfile="nbtview/Tag.hpp" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1a215daca7767bfe31cac443b1956a190f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespacenbtview_1a9fcb48c3df7749255fcc9f3f9e84f3fa" kindref="member">Tag</ref> &amp;</type>
        <definition>const Tag&amp; nbtview::Compound::at</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>at</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="161" column="15" bodyfile="nbtview/Tag.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classnbtview_1_1Compound_1a2cc456b2a124a954c95582ad06de4d10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::pair&lt; iterator, bool &gt;</type>
        <definition>std::pair&lt;iterator, bool&gt; nbtview::Compound::emplace</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>emplace</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nbtview/Tag.hpp" line="165" column="15" bodyfile="nbtview/Tag.hpp" bodystart="165" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classnbtview_1_1Compound" kindref="compound">Compound</ref> is an associative container that holds Tags by their string names. </para>
    </briefdescription>
    <detaileddescription>
<para>The most typical use is to retrieve a reference to an existing tag of a given type using <ref refid="classnbtview_1_1Compound_1aa3e34fe1fd2f862e82e135c8c3a8a1fe" kindref="member">Compound::get</ref>, which can then be read or modified in place. New tags of a given type can be added via <ref refid="classnbtview_1_1Compound_1a2065f9f197bb9776da9bd40ce7e9669a" kindref="member">Compound::put&lt;T&gt;</ref>.</para>
<para>For less typical use, <ref refid="classnbtview_1_1Compound" kindref="compound">Compound</ref> does provide access via iterators as well as more access to Tag references with Compound::at() and in-place construction of elements with Compound::emplace(). </para>
    </detaileddescription>
    <location file="nbtview/Tag.hpp" line="111" column="1" bodyfile="nbtview/Tag.hpp" bodystart="111" bodyend="171"/>
    <listofallmembers>
      <member refid="classnbtview_1_1Compound_1a512af697c0ff1ffa42f4304e34065620" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>at</name></member>
      <member refid="classnbtview_1_1Compound_1a215daca7767bfe31cac443b1956a190f" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>at</name></member>
      <member refid="classnbtview_1_1Compound_1a617e8f4f44d84995f4d25c9fb9633a62" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>begin</name></member>
      <member refid="classnbtview_1_1Compound_1af40e2248e39eb5e2e2f11f7cae5e2455" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>begin</name></member>
      <member refid="classnbtview_1_1Compound_1a111037d1db2d6118bf1a14140cbd2b94" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>cbegin</name></member>
      <member refid="classnbtview_1_1Compound_1a5b27dbf191331408891c57e579c04867" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>cend</name></member>
      <member refid="classnbtview_1_1Compound_1a30548f7e54178a2d7e05e3f39e5207ec" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>Compound</name></member>
      <member refid="classnbtview_1_1Compound_1ae75c4271ea6ccfddcb21e7462a2ed6fc" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>const_iterator</name></member>
      <member refid="classnbtview_1_1Compound_1a38e6ffc13f37a84b05bad6ca9112fa7a" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>contains</name></member>
      <member refid="classnbtview_1_1Compound_1afc4f90d4bfa6caf384dadd472086473e" prot="private" virt="non-virtual"><scope>nbtview::Compound</scope><name>data</name></member>
      <member refid="classnbtview_1_1Compound_1a2cc456b2a124a954c95582ad06de4d10" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>emplace</name></member>
      <member refid="classnbtview_1_1Compound_1a883a02c7626f2bf6755a75b0b793ed2a" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>empty</name></member>
      <member refid="classnbtview_1_1Compound_1af048b79c92349cebff7c946fb89d6704" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>end</name></member>
      <member refid="classnbtview_1_1Compound_1a5787d3aa5d92db50b4cd894d4a297eaa" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>end</name></member>
      <member refid="classnbtview_1_1Compound_1aa3e34fe1fd2f862e82e135c8c3a8a1fe" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>get</name></member>
      <member refid="classnbtview_1_1Compound_1a21f82b837d461f56e7621482eca1e0ef" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>iterator</name></member>
      <member refid="classnbtview_1_1Compound_1a2065f9f197bb9776da9bd40ce7e9669a" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>put</name></member>
      <member refid="classnbtview_1_1Compound_1aeaf04cfe043461d7f8ac9e8ced9ae973" prot="public" virt="non-virtual"><scope>nbtview::Compound</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
